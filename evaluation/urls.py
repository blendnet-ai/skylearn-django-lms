from django.urls import path, re_path
from evaluation import consumers
from .views import (
    MockInterviewBehaviouralReportView,
    XobinResultWebhook,
    AssessmentDisplayData,
    AzureStorageURL,
    DashboardData,
    StartAssessment,
    FetchQuestion,
    FetchIndividualScorecard,
    FetchScorecard,
    FetchAssessmentData,
    FetchAssessmentHistory,
    FetchAssessmentState,
    GetNextQuestion,
    SubmitAssessmentAnswerMCQ,
    SubmitAssessmentAnswerMMCQ,
    SubmitAssessmentAnswerSubjective,
    SubmitAssessmentAnswerVoice,
    CloseAssessment,
    ExitAssessment,
    DSAExecute,
    DSAExecutionStatus,
    DSAChatHistory,
    DSAFullChatHistory,
    DSAReport,
    DSAQuestionsList,
    DSAPracticeAttemptGenerator,
    QuestionIssueReport,
    DSAPracticeReportHistory,
    FetchDashboardDetails,
    DSASheetList,
    DSAAssessmentChatHistoryView,
    DSALabQuestionsList,
    AvailableInterviewTypesView
)

urlpatterns = [
    path('assessment-display-data', AssessmentDisplayData.as_view(), name='assessment_data'),
    path('dashboard-data', DashboardData.as_view(), name='test_data'),
    path('start-assessment', StartAssessment.as_view(), name='start_assessment'),
    path('fetch-next-question',GetNextQuestion.as_view(), name='fetch_next_question'), #disuss
    path('fetch-question',FetchQuestion.as_view(), name='fetch_question'),
    path('fetch-assessment-data',FetchAssessmentData.as_view(), name='fetch_assessment_data'),
    path('fetch-assessment-history',FetchAssessmentHistory.as_view(), name='fetch_assessment_history'),
    path('fetch-assessment-state',FetchAssessmentState.as_view(), name='fetch_assessment_state'),
    path('fetch-scorecard',FetchScorecard.as_view(), name='fetch_scorecard'),
    path('fetch-individual-scorecard',FetchIndividualScorecard.as_view(), name='fetch_individual_scorecard'),
    path('submit-assessment-answer-mcq',SubmitAssessmentAnswerMCQ.as_view(), name='submit_assessment_answer_mcq'),
    path('submit-assessment-answer-mmcq',SubmitAssessmentAnswerMMCQ.as_view(), name='submit_assessment_answer_mmcq'),
    path('submit-assessment-answer-subjective',SubmitAssessmentAnswerSubjective.as_view(), name='submit_assessment_answer_subjective'),
    path('submit-assessment-answer-voice',SubmitAssessmentAnswerVoice.as_view(), name='submit_assessment_answer_voice'),
    path('close-assessment',CloseAssessment.as_view(), name='close_assessment'),
    path('exit-assessment',ExitAssessment.as_view(), name='exit_assessment'),
    path('xobin-result',XobinResultWebhook.as_view(), name='xobin_result'),
    path('generate-azure-storage-url',AzureStorageURL.as_view(), name='generate_azure_storage_url'),
    path('dsa-execute',DSAExecute.as_view(), name='dsa_execute'),
    path('dsa-execution-status',DSAExecutionStatus.as_view(), name='dsa_execution_status'),
    path('dsa-chat-history', DSAChatHistory.as_view(), name='dsa_chat_history'),
    path('dsa-full-chat-history', DSAFullChatHistory.as_view(), name='dsa_full_chat_history'),
    path('dsa-practice-report',DSAReport.as_view(), name='dsa_practice_report'),
    path('dsa-questions-list', DSAQuestionsList.as_view(), name='dsa_questions_list'),
    path('dsa-lab-questions-list', DSALabQuestionsList.as_view(), name='dsa_lab_questions_list'),
    path('generate-dsa-practice-attempt', DSAPracticeAttemptGenerator.as_view(), name='generate_dsa_practice_attempt'),
    path('submit-question-report',QuestionIssueReport.as_view(), name='submit_question_report'),
    path('dsa-practice-report-history',DSAPracticeReportHistory.as_view(), name='dsa_practice_report_history'),
    path('dashboard-details',FetchDashboardDetails.as_view(), name='dashboard_details'),
    path('dsa-sheet-list',DSASheetList.as_view(), name='dsa_sheet_list'),
    path('assessment-chat-history/<int:assessment_id>/', DSAAssessmentChatHistoryView.as_view(), name='assessment_chat_history'),
     path('available-interview-types', AvailableInterviewTypesView().as_view(), name='available_interview_types'),
     path('mock-interview-behavioural-report', MockInterviewBehaviouralReportView.as_view(), name='mock_interview_behavioural_report'),
]

websocket_urlpatterns =[
    re_path(r'ws/dsa/$', consumers.DSABotWebsocketConsumer.as_asgi()),
]